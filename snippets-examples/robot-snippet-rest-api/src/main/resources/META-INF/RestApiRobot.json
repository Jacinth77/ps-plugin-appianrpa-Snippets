{"id":"RestApiRobot","robotType":"ROBOT","mainClass":"com.appian.rpa.snippets.examples.restapi.RestApiRobot","actions":["start","resetRetryNumber","end"],"conditionalActions":["startUp"],"fieldLinks":[],"actionDetails":[{"id":"start","implementation":"/**\n\t * Initialize the rest of the elements to be used during the workflow actions.\n\t */\npublic void start() {\n    restApiUtils = RestApiUtils.getInstance();\n    consoleUrl = server.getEnvironmentVariables().get(EV_CONSOLE_URL);\n    endpoint = server.getEnvironmentVariables().get(EV_ENDPOINT);\n    itemID = server.getEnvironmentVariables().get(ITEM_ID);\n    // Get the credentials\n    IUsernamePassword credentials = server.getCredential(CREDENTIAL_API_KEY, false, ECredentialSearch.FIRST_LISTED);\n    // Check if the credentials are null\n    if (credentials == null) {\n        throw new  JidokaFatalException(\"Robot doesn't have access to any credentials\");\n    }\n    this.apiKey = credentials.getPassword();\n}"},{"id":"resetRetryNumber","implementation":"/**\n\t * Set the number of retries to 3 for the desired queueItem.\n\t * \n\t * @throws IOException\n\t */\npublic void resetRetryNumber() throws IOException {\n    try {\n        Map<String, Object> body = new  HashMap();\n        body.put(\"id\", itemID);\n        body.put(\"remainingAttempts\", 3);\n        restApiUtils.restApiCall(this.consoleUrl, this.endpoint, this.apiKey, body);\n    } catch (Exception e) {\n        throw new  JidokaFatalException(e.getMessage(), e);\n    }\n}"},{"id":"end","implementation":"/**\n\t * This is the last action from the robot workflow.\n\t */\npublic void end() {\n    server.info(\"The robot execution ended succesfuly\");\n}"}],"conditionalActionDetails":[{"id":"startUp","implementation":"/**\n\t * Override startup method to initialise some variables involved in our process.\n\t */\n@Override\npublic boolean startUp() throws Exception {\n    this.server = JidokaFactory.getServer();\n    return IRobot.super.startUp();\n}"}],"sdkMethods":[]}