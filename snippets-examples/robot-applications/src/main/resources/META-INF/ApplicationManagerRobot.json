{"id":"ApplicationManagerRobot","robotType":"ROBOT","mainClass":"com.appian.rpa.robot.applications.ApplicationManagerRobot","actions":["start","openCalculator","openNotepad","setCalculatorAsForegroundApp","closeNotepad","closeCalculator","end"],"conditionalActions":["startUp"],"fieldLinks":[],"actionDetails":[{"id":"start","implementation":"/**\n\t * Initialize the calculator and notepad apps.\n\t */\npublic void start() {\n    calculatorApp = new  ApplicationManager(this, \"calc.exe\", \"C:\\\\Windows\\\\system32\\\\\", \".*Calculator.*\");\n    notepadApp = new  ApplicationManager(this, \"notepad.exe\", \"C:\\\\Windows\\\\system32\", \".*Notepad.*\");\n}"},{"id":"openCalculator","implementation":"public void openCalculator() {\n    try {\n        calculatorApp.startApplication();\n    } catch (Exception e) {\n        throw new  JidokaFatalException(\"Error starting the Calculator\");\n    }\n}"},{"id":"openNotepad","implementation":"public void openNotepad() {\n    try {\n        notepadApp.startApplication();\n    } catch (Exception e) {\n        throw new  JidokaFatalException(\"Error starting the Notepad\");\n    }\n}"},{"id":"setCalculatorAsForegroundApp","implementation":"public void setCalculatorAsForegroundApp() {\n    calculatorApp.activateWindow();\n}"},{"id":"closeNotepad","implementation":"public void closeNotepad() {\n    try {\n        notepadApp.closeApp();\n    } catch (Exception e) {\n        throw new  JidokaFatalException(\"An error appeared while closing the Notepad\");\n    }\n}"},{"id":"closeCalculator","implementation":"public void closeCalculator() {\n    try {\n        calculatorApp.getClient().typeText(calculatorApp.getClient().keyboardSequence().typeAltF(4));\n    } catch (Exception e) {\n        throw new  JidokaFatalException(\"An error appeared while closing the Calculator\");\n    }\n}"},{"id":"end","implementation":"public void end() {\n    server.info(\"end\");\n}"}],"conditionalActionDetails":[{"id":"startUp","implementation":"/**\n\t * Override startup method to initialize some variables involved in our process.\n\t */\n@Override\n@SuppressWarnings(\"unchecked\")\npublic boolean startUp() throws Exception {\n    server = (IJidokaServer<Serializable>) JidokaFactory.getServer();\n    return true;\n}"}],"sdkMethods":[]}