{"id":"Robot3270","robotType":"ROBOT","mainClass":"com.appian.robot.demo.Robot3270","actions":["init","open3270","validateMainPage","goToNetView","changePassword","close3270","end"],"conditionalActions":["startUp"],"fieldLinks":[],"actionDetails":[{"id":"init","implementation":"/**\n\t * Action 'Init'.\n\t * <p>\n\t * Initializes Jidoka modules. Instances of the emulator type passed as a\n\t * parameter are loaded\n\t */\npublic void init() {\n    try {\n        String emulator = server.getParameters().get(\"Emulator\");\n        if (emulator.equals(\"wc3270\")) {\n            ibm3270Commons = new  WC3270CommonsExtended(client, this);\n            appName = IBM3270Constants.APP_NAME_WC3270;\n            processName = IBM3270Constants.PROCESS_NAME_WC3270;\n        } else {\n            ibm3270Commons = new  PCOMCommonsExtended(client, this);\n            appName = IBM3270Constants.APP_NAME_PCOMM;\n            processName = IBM3270Constants.PROCESS_NAME_PCOMM;\n        }\n        appManager = new  IBM3270AppManager(this);\n        server.debug(\"Robot initialized\");\n    } catch (Exception e) {\n        throw new  JidokaFatalException(\"Error initializing\");\n    }\n}"},{"id":"open3270","implementation":"/**\n\t * Action 'Open 3270' terminal\n\t */\npublic void open3270() {\n    server.info(\"Opening 3270 terminal\");\n    appManager.openIBM3270(appName, ibm3270Commons.getWindowTitleRegex());\n    client.pause(1000);\n    server.sendScreen(\"Screenshot after opening the terminal\");\n}"},{"id":"validateMainPage","implementation":"/**\n\t * Action 'Validate page'.\n\t */\npublic void validateMainPage() {\n    server.info(\"Validating Welcome Page\");\n    TextInScreen textInScreen = ibm3270Commons.locateText(5, ConstantsTexts.WELCOME_UNIVOCAL_TEXT);\n    if (textInScreen != null) {\n        server.info(String.format(\"Text %s found\", ConstantsTexts.WELCOME_UNIVOCAL_TEXT));\n    } else {\n        throw new  JidokaFatalException(String.format(\"Text not %s found\", ConstantsTexts.WELCOME_UNIVOCAL_TEXT));\n    }\n}"},{"id":"goToNetView","implementation":"/**\n\t * Action 'Go to NetView' page.\n\t * \n\t * @throws JidokaException\n\t */\npublic void goToNetView() throws JidokaException {\n    server.sendScreen(\"Screenshot before moving to NetView page\");\n    ibm3270Commons.write(\"NETVIEW\");\n    client.pause(1000);\n    ibm3270Commons.enter();\n    client.pause(1000);\n    currentPage = new  NetViewPage(client, this, ibm3270Commons).assertIsThisPage();\n    server.sendScreen(\"Moved to NetView page\");\n}"},{"id":"changePassword","implementation":"/**\n\t * Action 'Change password'.\n\t * \n\t * @throws JidokaException\n\t */\npublic void changePassword() throws JidokaException {\n    server.info(\"Change NetView Password\");\n    ((NetViewPage) currentPage).changeOperatorPassword();\n}"},{"id":"close3270","implementation":"/**\n\t * Action 'Close 3270'.\n\t */\npublic void close3270() {\n    appManager.closeIBM3270(processName, ibm3270Commons.getWindowTitleRegex());\n}"},{"id":"end","implementation":"/**\n\t * Action 'End'.\n\t */\npublic void end() {\n}"}],"conditionalActionDetails":[{"id":"startUp","implementation":"/**\n\t * Startup method. This <code>startUp</code> method is called prior to calling\n\t * the first workflow method defined\n\t */\n@SuppressWarnings(\"unchecked\")\n@Override\npublic boolean startUp() throws Exception {\n    server = (IJidokaServer<Serializable>) JidokaFactory.getServer();\n    client = IClient.getInstance(this);\n    return true;\n}"}],"sdkMethods":[]}