{"id":"Robot3270","robotType":"ROBOT","mainClass":"com.appian.robot.demo.Robot3270","actions":["init","open3270","close3270","locateText","changeScreen","end"],"conditionalActions":["startUp"],"fieldLinks":[],"actionDetails":[{"id":"init","implementation":"/**\n\t * Action 'Init'.\n\t * <p>\n\t * Initializes Jidoka modules.\n\t * \n\t * @throws JidokaException if the input file couldn't be read\n\t * @throws IOException\n\t */\npublic void init() {\n    try {\n        ibm3270Commons = new  IBM3270Commons(server, windows, this);\n        appManager = new  IBM3270AppManager(server, windows, this);\n        server.debug(\"Robot initialized\");\n    } catch (Exception e) {\n        throw new  JidokaFatalException(\"Error initializing\");\n    }\n}"},{"id":"open3270","implementation":"/**\n\t * Action 'Open 3270'.\n\t */\npublic void open3270() {\n    appManager.openIBM3270(APP_NAME, WINDOW_TITLE_REGEX);\n}"},{"id":"close3270","implementation":"/**\n\t * Action 'Close 3270'.\n\t */\npublic void close3270() {\n    appManager.closeIBM3270();\n}"},{"id":"locateText","implementation":"/**\n\t * Action 'Locate text'.\n\t */\npublic void locateText() {\n    TextInScreen textInScreen = ibm3270Commons.locateText(2, \"Welcome\");\n    if (textInScreen != null) {\n        server.info(MessageFormat.format(\"Text '%s' found\", \"Welcome\"));\n    }\n}"},{"id":"changeScreen","implementation":"/**\n\t * Action 'Change screen'.\n\t */\npublic void changeScreen() {\n    server.info(\"Moving to AOF page\");\n    ibm3270Commons.moveToCoodinates(\"==>\", 3, 1);\n    windows.pause(1000);\n    ibm3270Commons.write(\"AOF\");\n    windows.pause(1000);\n    ibm3270Commons.enter();\n    server.info(\"Moved to AOF page\");\n}"},{"id":"end","implementation":"/**\n\t * Action 'End'.\n\t */\npublic void end() {\n}"}],"conditionalActionDetails":[{"id":"startUp","implementation":"/**\n\t * Startup method. This <code>startUp</code> method is called prior to calling\n\t * the first workflow method defined\n\t */\n@SuppressWarnings(\"unchecked\")\n@Override\npublic boolean startUp() throws Exception {\n    server = (IJidokaServer<Serializable>) JidokaFactory.getServer();\n    windows = IWindows.getInstance(this);\n    waitFor = windows.waitFor(this);\n    keyboard = windows.keyboard();\n    return true;\n}"}],"sdkMethods":[]}