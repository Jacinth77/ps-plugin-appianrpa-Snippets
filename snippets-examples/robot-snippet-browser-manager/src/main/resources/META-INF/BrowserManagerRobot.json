{"id":"BrowserManagerRobot","robotType":"ROBOT","mainClass":"com.appian.rpa.snippets.examples.browsermanager.BrowserManagerRobot","actions":["start","openBrowser","navigateToWeb","printWebResultInConsole","searchInformation","close","end"],"conditionalActions":["startUp"],"fieldLinks":[],"actionDetails":[{"id":"start","implementation":"/**\n\t * Initialize the objects involved in the robotic process.\n\t * \n\t * @throws Exception\n\t */\npublic void start() throws Exception {\n    browserManager = new  BrowserManager(this, EBrowsers.CHROME);\n    searcherURL = server.getParameters().get(\"platformURL\");\n    selectors = browserManager.getSelectorsManager();\n}"},{"id":"openBrowser","implementation":"/*\n\t * Open a new Chrome web browser.\n\t */\npublic void openBrowser() {\n    browserManager.openBrowser();\n}"},{"id":"navigateToWeb","implementation":"/**\n\t * Navigate to searcherURL. An exception is thrown if the search button selector\n\t * was not found.\n\t * \n\t * @throws Exception\n\t */\npublic void navigateToWeb() throws JidokaFatalException {\n    browserManager.navigateTo(searcherURL);\n    if (!isClassNameElementSuccessfullyLoaded(selectors.getSelector(\"selector.search-button.classname\"))) {\n        throw new  JidokaFatalException(\"page could not be loaded\");\n    }\n}"},{"id":"printWebResultInConsole","implementation":"/**\n\t * If the search result was successfully loaded, print the first result found in\n\t * Console.\n\t */\npublic void printWebResultInConsole() {\n    if (!isXPathElementSuccessfullyLoaded(selectors.getSelector(\"selector.appian-result.xpath\"))) {\n        throw new  JidokaFatalException(\"web result not found\");\n    }\n    server.info(browserManager.getBrowser().getText(selectors.getBy(\"selector.appian-result.xpath\")));\n}"},{"id":"searchInformation","implementation":"/**\n\t * Search results for \"Appian\" String\n\t */\npublic void searchInformation() {\n    browserManager.getBrowser().clickSafe(browserManager.getBrowser().waitElement(selectors.getBy((\"selector.searchbar.xpath\"))));\n    client.pause(1000);\n    client.typeText(\"Appian\");\n    client.keyboard().enter();\n    client.pause(3000);\n}"},{"id":"close","implementation":"/**\n\t * Close all the applications\n\t */\npublic void close() {\n    closeBrowser();\n}"},{"id":"end","implementation":"/**\n\t * This is the last non-hidden action from the robot workflow.\n\t */\npublic void end() {\n    server.info(\"Execution finished\");\n}"}],"conditionalActionDetails":[{"id":"startUp","implementation":"/**\n\t * Override startup method to initialize some variables involved in our process.\n\t */\n@Override\npublic boolean startUp() throws Exception {\n    server = JidokaFactory.getServer();\n    client = IClient.getInstance(this);\n    return true;\n}"}],"sdkMethods":[]}